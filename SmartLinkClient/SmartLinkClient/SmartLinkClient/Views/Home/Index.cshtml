@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>URL Summarizer</title>
    <link rel="stylesheet" href="~/css/index.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="navbar-container">
            <a href="#" class="navbar-logo">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10"></circle>
                    <line x1="12" y1="16" x2="12" y2="12"></line>
                    <line x1="12" y1="8" x2="12.01" y2="8"></line>
                </svg>
                <span class="navbar-logo-text">URL Summarizer</span>
            </a>
            <div class="navbar-links">
                <!-- Auth buttons (shown when logged out) -->
                <div class="auth-buttons" id="auth-buttons">
                    <button class="login-button" id="login-btn">Giriş Yap</button>
                    <button class="register-button" id="register-btn">Kayıt Ol</button>
                </div>

                <!-- User info (shown when logged in) -->
                <div class="user-info" id="user-info" style="display: none;">
                    <div class="user-avatar" id="user-avatar">U</div>
                    <span class="user-name" id="user-name">Username</span>
                    <button class="logout-button" id="logout-btn">Çıkış Yap</button>
                </div>
            </div>
            <button class="navbar-menu-button" id="menu-toggle">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <line x1="3" y1="12" x2="21" y2="12"></line>
                    <line x1="3" y1="6" x2="21" y2="6"></line>
                    <line x1="3" y1="18" x2="21" y2="18"></line>
                </svg>
            </button>
        </div>
    </nav>

    <!-- Mobile Menu -->
    <div class="mobile-menu" id="mobile-menu">
        <!-- Mobile auth buttons (shown when logged out) -->
        <div class="mobile-auth-buttons" id="mobile-auth-buttons">
            <button class="login-button" id="mobile-login-btn">Giriş Yap</button>
            <button class="register-button" id="mobile-register-btn">Kayıt Ol</button>
        </div>

        <!-- Mobile user info (shown when logged in) -->
        <div class="mobile-user-info" id="mobile-user-info" style="display: none;">
            <div class="user-info">
                <div class="user-avatar" id="mobile-user-avatar">U</div>
                <span class="user-name" id="mobile-user-name">Username</span>
            </div>
            <button class="logout-button" id="mobile-logout-btn">Çıkış Yap</button>
        </div>
    </div>

    <!-- Login Modal -->
    <div class="modal" id="login-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Giriş Yap</h3>
                <button class="modal-close" id="close-login">&times;</button>
            </div>
            <form class="modal-form" id="login-form">
                <div class="form-group">
                    <label for="login-email">Kullanıcı Adı</label>
                    <input type="text" id="login-email" placeholder="Kullanıcı adınızı girin" required>
                </div>
                <div class="form-group">
                    <label for="login-password">Şifre</label>
                    <input type="password" id="login-password" placeholder="Şifrenizi girin" required>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="register-button">Giriş Yap</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Register Modal -->
    <div class="modal" id="register-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Kayıt Ol</h3>
                <button class="modal-close" id="close-register">&times;</button>
            </div>
            <div class="form-group">
                <label for="register-name">Kullanıcı Adı</label>
                <input type="text" id="register-name" placeholder="Kullanıcı adınızı girin" required>
            </div>
            <div class="form-group">
                <label for="register-password">Şifre</label>
                <input type="password" id="register-password" placeholder="En az 6 karakter kullanın" required>
            </div>
            <div class="form-group">
                <label for="register-confirm-password">Şifre Tekrar</label>
                <input type="password" id="register-confirm-password" placeholder="Şifrenizi tekrar girin" required>
            </div>
            <div class="modal-footer">
                <button type="button" id="register-button" class="register-button">Kayıt Ol</button>
            </div>
        </div>
    </div>

    <div class="container">
        <header>
            <div class="header-content">
                <div class="header-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="12" cy="12" r="10"></circle>
                        <line x1="12" y1="16" x2="12" y2="12"></line>
                        <line x1="12" y1="8" x2="12.01" y2="8"></line>
                    </svg>
                </div>
                <h1>URL Summarizer</h1>
                <p class="subtitle">Get concise summaries of any web page with AI-powered technology</p>
            </div>
        </header>

        <div class="card">
            <div class="input-group">
                <div class="input-wrapper">
                    <input id="url-input" placeholder="Enter a URL to summarize (e.g., https://example.com)" required>
                    <input id="title-input" type="hidden" value="a" />
                </div>
                <div class="button-group">
                    <button id="summarize-btn" type="button">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 8px; vertical-align: -2px;">
                            <circle cx="11" cy="11" r="8"></circle>
                            <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                        </svg>
                        Summarize
                    </button>
                    <button id="clear-btn" type="button">Clear</button>
                </div>
            </div>
        </div>

        <div class="card summary-container" id="summary-container">
            <div class="summary-header">
                <h2>Summary</h2>
                <div class="summary-actions">
                    <button class="icon-button" id="copy-btn" title="Copy to clipboard">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                        </svg>
                    </button>
                </div>
            </div>
            <div class="summary" id="summary-text">
            </div>
        </div>
    </div>

    <div id="overlay">
        <div class="loader-container">
            <div class="loader">
                <div class="loader-dot"></div>
                <div class="loader-dot"></div>
                <div class="loader-dot"></div>
            </div>
            <p class="loader-text">Generating summary...</p>
        </div>
    </div>

    <div class="toast" id="toast">Copied to clipboard!</div>

    <script>
        // DOM Elements
        const urlInput = document.getElementById("url-input");
        const titleInput = document.getElementById("title-input");
        const summarizeBtn = document.getElementById("summarize-btn");
        const clearBtn = document.getElementById("clear-btn");
        const summaryContainer = document.getElementById("summary-container");
        const summaryText = document.getElementById("summary-text");
        const overlay = document.getElementById("overlay");
        const copyBtn = document.getElementById("copy-btn");
        const toast = document.getElementById("toast");

        // Navbar Elements
        const menuToggle = document.getElementById("menu-toggle");
        const mobileMenu = document.getElementById("mobile-menu");
        const loginBtn = document.getElementById("login-btn");
        const registerBtn = document.getElementById("register-btn");
        const mobileLoginBtn = document.getElementById("mobile-login-btn");
        const mobileRegisterBtn = document.getElementById("mobile-register-btn");
        const loginModal = document.getElementById("login-modal");
        const registerModal = document.getElementById("register-modal");
        const closeLogin = document.getElementById("close-login");
        const closeRegister = document.getElementById("close-register");

        // Auth Elements
        const authButtons = document.getElementById("auth-buttons");
        const userInfo = document.getElementById("user-info");
        const userAvatar = document.getElementById("user-avatar");
        const userName = document.getElementById("user-name");
        const logoutBtn = document.getElementById("logout-btn");

        // Mobile Auth Elements
        const mobileAuthButtons = document.getElementById("mobile-auth-buttons");
        const mobileUserInfo = document.getElementById("mobile-user-info");
        const mobileUserAvatar = document.getElementById("mobile-user-avatar");
        const mobileUserName = document.getElementById("mobile-user-name");
        const mobileLogoutBtn = document.getElementById("mobile-logout-btn");

        const registerButton = document.getElementById("register-button");
        const loginForm = document.getElementById("login-form");

        // Check if user is logged in
        function checkLoginStatus() {
            const user = localStorage.getItem('user');
            if (user) {
                showLoggedInState(user);
            } else {
                showLoggedOutState();
            }
        }

        // Show logged in state
        function showLoggedInState(username) {
            // Update desktop view
            authButtons.style.display = 'none';
            userInfo.style.display = 'flex';
            userName.textContent = username;
            userAvatar.textContent = username.charAt(0).toUpperCase();

            // Update mobile view
            mobileAuthButtons.style.display = 'none';
            mobileUserInfo.style.display = 'flex';
            mobileUserName.textContent = username;
            mobileUserAvatar.textContent = username.charAt(0).toUpperCase();
        }

        // Show logged out state
        function showLoggedOutState() {
            // Update desktop view
            authButtons.style.display = 'flex';
            userInfo.style.display = 'none';

            // Update mobile view
            mobileAuthButtons.style.display = 'flex';
            mobileUserInfo.style.display = 'none';
        }

        // Event Listeners for Summarizer
        summarizeBtn.addEventListener("click", summarizeURL);
        clearBtn.addEventListener("click", clearForm);
        copyBtn.addEventListener("click", copyToClipboard);
        urlInput.addEventListener("keypress", function(event) {
            if (event.key === "Enter") {
                summarizeURL();
            }
        });

        // Event Listeners for Navbar and Modals
        menuToggle.addEventListener("click", toggleMobileMenu);
        loginBtn.addEventListener("click", () => openModal(loginModal));
        registerBtn.addEventListener("click", () => openModal(registerModal));
        mobileLoginBtn.addEventListener("click", () => {
            closeMobileMenu();
            openModal(loginModal);
        });
        mobileRegisterBtn.addEventListener("click", () => {
            closeMobileMenu();
            openModal(registerModal);
        });
        closeLogin.addEventListener("click", () => closeModal(loginModal));
        closeRegister.addEventListener("click", () => closeModal(registerModal));

        // Logout buttons
        logoutBtn.addEventListener("click", logout);
        mobileLogoutBtn.addEventListener("click", logout);

        // Close modals when clicking outside
        window.addEventListener("click", function(event) {
            if (event.target === loginModal) {
                closeModal(loginModal);
            }
            if (event.target === registerModal) {
                closeModal(registerModal);
            }
        });

        // Login form submission
        loginForm.addEventListener('submit', function(e) {
            e.preventDefault();
            login();
        });

        // Register button click
        registerButton.addEventListener("click", register);

        // Functions for Navbar and Modals
        function toggleMobileMenu() {
            mobileMenu.classList.toggle("active");
        }

        function closeMobileMenu() {
            mobileMenu.classList.remove("active");
        }

        function openModal(modal) {
            modal.classList.add("active");
        }

        function closeModal(modal) {
            modal.classList.remove("active");
        }

        async function login() {
            const username = document.getElementById("login-email").value;
            const password = document.getElementById("login-password").value;

             try {
                const response = await fetch("https://smartlinkapi.imaginewebsite.com.tr/api/users/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ username: username, password: password })
                });

                if (!response.ok) throw new Error(`Response Status: ${response.status}`);
                const json = await response.json();

                localStorage.setItem('user', username);
                localStorage.setItem('id',json.id);
                showLoggedInState(username);
                closeModal(loginModal);
                showToast("Giriş başarılı!");
            } catch (error) {
                console.error("Login error:", error);
                showToast("Giriş başarısız. Lütfen tekrar deneyin.");
            }
        }

        async function register() {
            const username = document.getElementById("register-name").value;
            const password = document.getElementById("register-password").value;
            const confirmPassword = document.getElementById("register-confirm-password").value;

            if (password !== confirmPassword) {
                showToast("Şifreler eşleşmiyor!");
                return;
            }

            try {
                const response = await fetch("https://smartlinkapi.imaginewebsite.com.tr/api/users", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ username: username, password: password })
                });

                if (!response.ok) throw new Error(`Response Status: ${response.status}`);

                // Auto login after successful registration
                const userData = { username: username };
                localStorage.setItem('user', username);

                showLoggedInState(username);
                closeModal(registerModal);
                showToast("Kayıt başarılı!");
            } catch (error) {
                console.error("Register error:", error);
                showToast("Kayıt başarısız. Lütfen tekrar deneyin.");
            }
        }

        function logout() {
            localStorage.removeItem('user');
            showLoggedOutState();
            showToast("Çıkış yapıldı!");
            closeMobileMenu();
        }

        // Functions for Summarizer
        async function summarizeURL() {
            const url = urlInput.value.trim();
            const title = titleInput.value;

            if (!url) {
                showToast("Please enter a valid URL");
                return;
            }

            overlay.style.display = "flex";

            try {
                const response = await fetch("https://smartlinkapi.imaginewebsite.com.tr/api/link", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ url: url, title: title, userid: localStorage.getItem('id') })
                });

                if (!response.ok) throw new Error(`Response status: ${response.status}`);

                const json = await response.json();

                summaryText.innerText = json.summary || "Summary not available for this URL.";

                summaryContainer.classList.add("visible");

                overlay.style.display = "none";
            } catch (error) {
                console.error(error.message);
                summaryText.innerText = "Invalid URL. Please try again later.";
                summaryContainer.classList.add("visible");
                overlay.style.display = "none";
                showToast("Error: Could not generate summary");
            }
        }

        function clearForm() {
            urlInput.value = "";
            summaryContainer.classList.remove("visible");
            setTimeout(() => {
                summaryText.innerText = "";
            }, 300);
            urlInput.focus();
        }

        function copyToClipboard() {
            const text = summaryText.innerText;
            navigator.clipboard.writeText(text).then(() => {
                showToast("Copied to clipboard!");
            }).catch(err => {
                showToast("Failed to copy text");
                console.error('Could not copy text: ', err);
            });
        }

        function showToast(message) {
            toast.textContent = message;
            toast.classList.add("show");

            setTimeout(() => {
                toast.classList.remove("show");
            }, 3000);
        }

        // Check login status on page load
        checkLoginStatus();
    </script>
</body>
</html>